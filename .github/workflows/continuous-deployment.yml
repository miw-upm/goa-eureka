name: CD - GitHub Packages
on:
  push:
    branches: [master]

env:
  REPOSITORY: ${{ github.repository }} # <user>/<repo>
  GHCR_URL: ghcr.io # GitHub Container Registry

jobs:
  cd:
    name: Build & Push GitHub Package & Deploy on Render Docker Image
    runs-on: ubuntu-22.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21
          cache: maven

      - name: Extract version from pom.xml
        id: get-version
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "ARTIFACT=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_URL }}
          username: ${{ github.actor }}
          # 1º Creación del Token de Acceso Personal
          #    Cuenta de GitHub >> Developer settings >> Personal access tokens >> Tokens >> Generate new token
          #    write:packages & read:packages & delete:packages & repo
          # 2º Configuración de Secrets en GitHub
          #    repositorio en GitHub >> settings >> secrets and variables >> actions >> new repository secret
          password: ${{ secrets.GHCR_PERSONAL_ACCESS_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.GHCR_URL }}/${{ env.REPOSITORY }}:${{ env.VERSION }}
            ${{ env.GHCR_URL }}/${{ env.REPOSITORY }}:latest

      - name: Deploy to AWS Lightsail
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.AWS_LIGHTSAIL_IP }}
          username: ${{ secrets.AWS_LIGHTSAIL_USER }}
          key: ${{ secrets.AWS_LIGHTSAIL_SSH_KEY }}
          script: |
            echo ${{ secrets.GHCR_PERSONAL_ACCESS_TOKEN }} | docker login ${{ env.GHCR_URL }} -u ${{ github.actor }} --password-stdin
            docker rm -f ${{ env.ARTIFACT }}-app || true
            docker rmi ${{ env.GHCR_URL }}/${{ env.REPOSITORY }}:latest || true
            docker pull ${{ env.GHCR_URL }}/${{ env.REPOSITORY }}:latest
            docker run -d --name ${{ env.ARTIFACT }}-app --restart always --network goa -p 8761:8761 ${{ env.GHCR_URL }}/${{ env.REPOSITORY }}:latest
